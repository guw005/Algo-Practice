Given two strings s and t, return the minimum window in s which will contain all the characters in t. If there is no such window in s that covers all characters in t, return the empty string "".

Note that If there is such a window, it is guaranteed that there will always be only one unique minimum window in s.

 

Example 1:

Input: s = "ADOBECODEBANC", t = "ABC"
Output: "BANC"
Example 2:

Input: s = "a", t = "a"
Output: "a"

var minWindow = function(s, t) {
    // console.log(s)
    let map = new Map();
    
    for(let i = 0; i < t.length; i++){
        if(!map[t[i]]){
            map[t[i]] = 0;
        }
        map[t[i]] += 1;
    }
    // console.log(map);
    let l = 0;
    let r = 0;
    let size = s.length;
    let count = t.length;
    let minIdx = 0;
    let minLength = Infinity;
    // console.log(size);
    
    while(r < size){
        console.log(count)
        console.log(map)
        if(map[s[r]] > 0){
            count --;
        }
        if(!map[s[r]]){
            map[s[r]] = 0;
        }
        map[s[r]] --;
        r++
        console.log(count);
        console.log(map);
        while(count === 0){
            if(r - l < minLength){
                minIdx = l;
                minLength = r - l;
            }
            map[s[l]] ++;
            
            if(map[s[l]] > 0){
               count ++;
               }
            l++
        }
    }
    
    if(minLength != Infinity){
        // console.log(s);
        return s.substr(minIdx, minLength);
    }
    
    return "";
};